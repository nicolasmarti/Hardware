theory OR16WAY

use import int.Int
use import bool.Bool

use import builtins.Wire
use import builtins.WireVector
use builtins.OR

function in0: WireVector.t
function out0: Wire.t

function in0_0: Wire.t = in0[0 ..]
function in0_1: Wire.t = in0[1 ..]
function in0_2: Wire.t = in0[2 ..]
function in0_3: Wire.t = in0[3 ..]
function in0_4: Wire.t = in0[4 ..]
function in0_5: Wire.t = in0[5 ..]
function in0_6: Wire.t = in0[6 ..]
function in0_7: Wire.t = in0[7 ..]
function in0_8: Wire.t = in0[8 ..]
function in0_9: Wire.t = in0[9 ..]
function in0_10: Wire.t = in0[10 ..]
function in0_11: Wire.t = in0[11 ..]
function in0_12: Wire.t = in0[12 ..]
function in0_13: Wire.t = in0[13 ..]
function in0_14: Wire.t = in0[14 ..]
function in0_15: Wire.t = in0[15 ..]


function aux01: Wire.t
clone builtins.OR as OR01 with function in0 = in0_0, function in1 = in0_1, function out0 = aux01

function aux23: Wire.t
clone builtins.OR as OR23 with function in0 = in0_2, function in1 = in0_3, function out0 = aux23

function aux45: Wire.t
clone builtins.OR as OR45 with function in0 = in0_4, function in1 = in0_5, function out0 = aux45

function aux67: Wire.t
clone builtins.OR as OR67 with function in0 = in0_6, function in1 = in0_7, function out0 = aux67

function aux0123: Wire.t
clone builtins.OR as OR0123 with function in0 = aux01, function in1 = aux23, function out0 = aux0123

function aux4567: Wire.t
clone builtins.OR as OR4567 with function in0 = aux45, function in1 = aux67, function out0 = aux4567

function aux01234567: Wire.t
clone builtins.OR as OR01234567 with function in0 = aux0123, function in1 = aux4567, function out0 = aux01234567

function aux89: Wire.t
clone builtins.OR as OR89 with function in0 = in0_8, function in1 = in0_9, function out0 = aux89

function aux1011: Wire.t
clone builtins.OR as OR1011 with function in0 = in0_10, function in1 = in0_11, function out0 = aux1011

function aux1213: Wire.t
clone builtins.OR as OR1213 with function in0 = in0_12, function in1 = in0_13, function out0 = aux1213

function aux1415: Wire.t
clone builtins.OR as OR1415 with function in0 = in0_14, function in1 = in0_15, function out0 = aux1415

function aux891011: Wire.t
clone builtins.OR as OR891011 with function in0 = aux89, function in1 = aux1011, function out0 = aux891011

function aux12131415: Wire.t
clone builtins.OR as OR12131415 with function in0 = aux1213, function in1 = aux1415, function out0 = aux12131415

function aux89101112131415: Wire.t
clone builtins.OR as OR89101112131415 with function in0 = aux891011, function in1 = aux12131415, function out0 = aux89101112131415

clone builtins.OR as OR0123456789101112131415 with function in0 = aux01234567, function in1 = aux89101112131415, function out0 = out0


(**)

lemma or16way_sem:
    forall t: int.
    out0[t] = orb in0[0 ..][t] 
              (orb in0[1 ..][t] 
              (orb in0[2 ..][t] 
              (orb in0[3 ..][t] 
              (orb in0[4 ..][t] 
              (orb in0[5 ..][t] 
              (orb in0[6 ..][t]
              (orb in0[7 ..][t]
              (orb in0[8 ..][t]
              (orb in0[9 ..][t]
              (orb in0[10 ..][t]
              (orb in0[11 ..][t]
              (orb in0[12 ..][t]
              (orb in0[13 ..][t]
              (orb in0[14 ..][t]
                   in0[15 ..][t]
              ))))))))))))))
end
